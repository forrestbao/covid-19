{"version":3,"sources":["components/NumberInput.tsx","components/UnitDisplay.tsx","pages/Home/OutputDialog.tsx","lib/svm_model.tsx","lib/svm_inference.tsx","api/index.ts","data/index.ts","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NumberInput","label","field","callback","props","onChange","useCallback","target","Number","value","FormControl","InputLabel","Input","type","noop","UnitDisplay","content","unit","event","selected","Array","isArray","length","v","dangerouslySetInnerHTML","__html","Select","defaultValue","map","item","index","MenuItem","key","OutputDialog","open","text","onClose","theme","useTheme","fullscreen","useMediaQuery","breakpoints","down","Dialog","fullScreen","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","color","SVM_COVID_19_Model_Parameters","str_Model_Mild_Vs_Viral","feature_scaling_string","Feature","svm_predict_with_model","array_to_predict","serialized_model","feature_min_max","console","log","feature_min_array","parse_feature_scaling_string","min","feature_max_array","max","preprocessed_vector","Error","return_vector","i","scale_input_array","svm","predict","input_string","option","return_array","splitted_result","split","str","each_line","splitted_each_line","each_line_numbers","each_string","push","match","parseFloat","formData","name","error","createStore","form","data","formStoreContext","React","createContext","useStyles","makeStyles","formControl","display","flexDirection","flexWrap","margin","spacing","inputField","marginLeft","marginRight","width","HomePageConsumer","classes","formStore","store","useContext","useFormStore","homeStore","useLocalStore","openDialog","dialogData","showMessage","useState","isSnackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","setField","showError","errorMessage","enter","input","forEach","some","Promise","resolve","Model","then","res","useObserver","Container","maxWidth","CssBaseline","className","style","marginTop","endAdornment","InputAdornment","position","variant","endIcon","Send","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","elevation","severity","HomePage","Provider","App","AppBar","Toolbar","Typography","path","url","process","exact","Home","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.62e80eaf.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\nimport { Input, InputProps, FormControl, InputLabel } from '@material-ui/core'\n\nconst NumberInput: React.FC<InputProps & {\n  label: string\n  field: number\n  callback: (index: number, value: number) => void\n}> = ({ label, field, callback, ...props }) => {\n  const onChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> =\n    useCallback((target) => {\n      callback(field, Number(target.target.value))\n    }, [field, callback])\n  return (\n    <FormControl>\n      <InputLabel>{label}</InputLabel>\n      <Input onChange={onChange} type='number' {...props}/>\n    </FormControl>\n  )\n}\n\nexport default NumberInput\n","import React, { useCallback } from 'react'\nimport { FormControl, Select, MenuItem } from '@material-ui/core'\n\nconst noop = () => {}\n\nexport type Unit = string | ([string, (value: number) => number] | [string])[]\n\nconst UnitDisplay: React.FC<{\n  unit: Unit\n  onChange?: (render: (value: number) => number) => void\n}> = ({ unit, onChange = noop }) => {\n  const callback = useCallback((event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    const selected = Number(event.target.value)\n    if (Array.isArray(unit) && unit[selected].length === 2 && typeof unit[selected][1] === 'function') {\n      onChange(unit[selected][1] as (v: number) => number)\n    } else {\n      onChange(v => v)\n    }\n  }, [unit, onChange])\n  let content: JSX.Element\n  if (typeof unit === 'string') {\n    content = <span dangerouslySetInnerHTML={{ __html: unit }}/>\n  } else if (Array.isArray(unit)) {\n    content = (\n      <FormControl>\n        <Select onChange={callback} defaultValue={0}>\n          {unit.map((item, index) => (\n            <MenuItem key={item[0]} value={index}>\n              {item[0]}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    )\n  } else {\n    return (<div></div>)\n  }\n  return content\n}\n\nexport default UnitDisplay\n","import React from 'react'\nimport {\n  Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions,\n  useTheme, useMediaQuery, Button\n} from '@material-ui/core'\n\nconst OutputDialog: React.FC<{\n  open: boolean,\n  text: string,\n  onClose: () => void\n}> = ({ open, text, onClose }) => {\n  const theme = useTheme()\n  const fullscreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <Dialog\n      fullScreen={fullscreen}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>Predict result</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} autoFocus color=\"primary\">\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default OutputDialog\n","export default class SVM_COVID_19_Model_Parameters {\n  static str_Model_Mild_Vs_Viral =\n  `\n  svm_type c_svc\n  kernel_type rbf\n  gamma 0.0009765625\n  nr_class 2\n  total_sv 144\n  rho 8.1774972129655268\n  label 1 -1\n  probA -0.67685709051754073\n  probB -0.71370817031882894\n  nr_sv 101 43\n  SV\n  5504 1:-0.323944 2:0.529412 3:-0.447115 4:-0.040613 5:-0.52 6:-0.0846287 7:0.0147783 8:-0.957698 9:-0.771909 10:-0.576943 11:-0.846918 12:-0.548799 13:-0.973869 14:-0.791045 15:-1 \n  5504 1:-0.791293 2:0.254902 3:-0.504808 4:0.701149 5:-0.686452 6:-0.692573 7:-0.871921 8:-0.905239 9:-0.889556 10:-0.611846 11:-0.887078 12:-0.661159 13:-0.98794 14:-0.791045 15:-1 \n  5504 1:-1 2:0.477124 3:-0.735577 4:-0.374713 5:-0.967742 6:0.0880829 7:-0.724138 8:-0.957698 9:-0.879952 10:-0.756742 11:-0.909742 12:-0.610487 13:-0.958794 14:-0.373134 15:-1 \n  5504 1:-0.610755 2:0.424837 3:-0.418269 4:0.413027 5:-0.594839 6:-0.564767 7:-0.684729 8:-0.957698 9:-0.839136 10:-0.62771 11:-0.889066 12:-0.511346 13:-0.846231 14:-0.701493 15:-1 \n  5504 1:-0.756722 2:0.542484 3:-0.899038 4:0.226054 5:-0.738065 6:-0.592401 7:-0.773399 8:-0.90997 9:-0.733493 10:-0.472237 11:-0.714513 12:-0.603878 13:-0.955779 14:0.283582 15:1 \n  5504 1:-0.226633 2:0.686275 3:-0.100962 4:-0.040613 5:-0.459355 6:-0.160622 7:0.0394089 8:-0.957698 9:-0.647059 10:-0.668958 11:-0.83499 12:-0.608284 13:-0.98794 14:-0.731343 15:1 \n  5504 1:-0.62356 2:-0.0196078 3:-0.697115 4:0.293487 5:-0.630968 6:-0.419689 7:-0.586207 8:-0.957698 9:-0.839136 10:-0.763088 11:-0.93002 12:-0.581846 13:-0.977889 14:-0.492537 15:-1 \n  4891.8399065654612 1:-0.81178 2:0.51634 3:-0.716346 4:-0.586207 5:-0.905806 6:0.478411 7:-0.261084 8:-0.957698 9:-0.781513 10:-0.668958 11:-0.893837 12:-0.663362 13:-0.982915 14:-0.731343 15:-1 \n  479.34201496119704 1:-0.0179257 2:0.529412 3:-0.326923 4:0.462069 5:-0.834839 6:-0.554404 7:-0.29064 8:-0.908996 9:-0.493397 10:-0.776838 11:-0.899404 12:-0.703018 13:-0.896471 14:-0.641791 15:-1 \n  5504 1:-0.640205 2:0.202614 3:-0.442308 4:-0.331801 5:-0.775484 6:0.229706 7:-0.133005 8:-0.957698 9:-0.735894 10:-0.576943 11:-0.864414 12:-0.6898 13:-0.896471 14:-0.791045 15:-1 \n  5504 1:-0.596671 2:0.738562 3:0.115385 4:-0.255172 5:-0.735484 6:0.105354 7:-0.162562 8:-0.957698 9:-0.867947 10:-0.632998 11:-0.810736 12:-0.381362 13:-0.98794 14:-0.731343 15:1 \n  5504 1:-0.6863 2:0.764706 3:-0.399038 4:0.0390805 5:-0.725161 6:-0.164076 7:-0.477833 8:-0.957698 9:-0.757503 10:-0.516658 11:-0.771769 12:-0.592862 13:-0.98794 14:-0.731343 15:1 \n  5504 1:-0.786172 2:0.424837 3:-0.572115 4:-0.402299 5:-0.863226 6:0.329879 7:-0.300493 8:-0.957698 9:-0.85114 10:-0.618191 11:-0.897018 12:-0.614893 13:-0.98794 14:-0.492537 15:-1 \n  5504 1:-0.370038 2:-1 3:-0.427885 4:0.0789272 5:-0.510968 6:-0.164076 7:-0.123153 8:-0.957698 9:-0.695078 10:-0.804336 11:-0.899006 12:-0.6898 13:-0.896471 14:-0.910448 15:-1 \n  2962.7006371522994 1:-0.761844 2:0.0588235 3:-0.610577 4:-0.040613 5:-0.789677 6:-0.0431779 7:-0.477833 8:-0.906213 9:-0.867947 10:-0.619249 11:-0.872763 12:-0.601674 13:-0.98794 14:-0.552239 15:-1 \n  4546.1218987959865 1:-0.527529 2:0.228758 3:-0.0913462 4:-0.230651 5:-0.691613 6:0.188256 7:0.00492611 8:-0.947262 9:-0.255702 10:-0.789529 11:-0.870378 12:-0.654549 13:-0.896471 14:-0.731343 15:-1 \n  5504 1:-0.501921 2:0.359477 3:0.5625 4:-0.101916 5:-0.645161 6:-0.0362694 7:-0.152709 8:-0.957698 9:-0.843938 10:-0.6055 11:-0.872366 12:-0.502534 13:-0.98794 14:-0.820896 15:-1 \n  5504 1:-0.444302 2:0.411765 3:-0.942308 4:-0.386973 5:-0.686452 6:0.260794 7:0.211823 8:-0.957698 9:-0.743097 10:-0.707033 11:-0.873161 12:-0.566424 13:-0.896471 14:-0.58209 15:-1 \n  5504 1:0.198464 2:0.411765 3:-0.211538 4:0.685824 5:-0.750968 6:-0.758204 7:-0.487685 8:-0.972448 9:-0.843938 10:-0.64569 11:-0.92167 12:-0.698612 13:-0.885427 14:-0.791045 15:-1 \n  5504 1:-0.644046 2:0.45098 3:-0.0528846 4:-0.298084 5:-0.776774 6:0.105354 7:-0.231527 8:-0.957698 9:-0.709484 10:-0.519831 11:-0.720875 12:-0.584049 13:-0.98794 14:-0.492537 15:1 \n  5504 1:-0.649168 2:0.633987 3:-0.802885 4:-0.32567 5:-0.779355 6:-0.015544 7:-0.320197 8:-0.941 9:-0.901561 10:-0.696457 11:-0.794433 12:-0.573034 13:-0.98794 14:-0.432836 15:1 \n  5504 1:-0.710627 2:0.359477 3:-0.0288462 4:0.143295 5:-0.725161 6:-0.46114 7:-0.674877 8:-0.942809 9:-0.891957 10:-0.572713 11:-0.846123 12:-0.284424 13:-0.849246 14:-0.134328 15:-1 \n  5504 1:-0.815621 2:0.529412 3:-0.432692 4:-0.672031 5:-0.92 6:0.336788 7:-0.344828 8:-0.957698 9:-0.87515 10:-0.765204 11:-0.817097 12:-0.581846 13:-0.98794 14:-0.223881 15:-1 \n  5504 1:-0.854033 2:0.294118 3:-0.552885 4:-0.279693 5:-0.88 6:-0.291883 7:-0.70936 8:-0.957698 9:-0.752701 10:-0.621364 11:-0.858449 12:-0.661159 13:-0.965829 14:-0.313433 15:-1 \n  5504 1:-0.791293 2:0.477124 4:-0.350192 5:-0.858065 6:-0.122625 7:-0.55665 8:-0.957698 9:-0.716687 10:-0.606557 11:-0.855666 12:-0.6898 13:-0.98794 14:-0.791045 15:-1 \n  5504 1:-0.65557 2:0.464052 3:-0.490385 4:0.189272 5:-0.673548 6:-0.450777 7:-0.625616 8:-0.957698 9:-0.589436 10:-0.649921 11:-0.840954 12:-0.672174 13:-0.98794 14:-0.880597 15:-1 \n  5504 1:-0.651729 2:0.372549 3:-0.206731 4:0.0237548 5:-0.712258 6:-0.274611 7:-0.527094 8:-0.957698 9:-0.858343 10:-0.512427 11:-0.8167 12:-0.610487 13:-0.98995 14:-0.641791 15:-1 \n  1598.1003095743297 1:-0.560819 2:0.869281 3:-0.557692 4:-0.331801 5:-0.734194 6:0.181347 7:-0.0492611 8:-0.862937 9:-0.848739 10:-0.694342 11:-0.823062 12:-0.692003 13:-0.896471 14:-0.462687 15:1 \n  5504 1:-0.705506 2:0.633987 3:-0.576923 4:-0.08659 5:-0.763871 6:-0.402418 7:-0.640394 8:-0.907048 9:-0.834334 10:-0.528292 11:-0.8 12:-0.658956 13:-0.98794 14:-0.522388 15:1 \n  5504 1:-0.332907 2:0.333333 3:-0.153846 4:-0.154023 5:-0.557419 6:-0.132988 7:-0.0344828 8:-0.957698 9:-0.678271 10:-0.689053 11:-0.949105 12:-0.57744 13:-0.896471 14:-0.641791 15:-1 \n  5504 1:-0.664533 2:0.738562 3:-0.456731 4:-0.190805 5:-0.76 6:0.132988 7:-0.236453 8:-0.957698 9:-0.752701 10:-0.693284 11:-0.71173 12:-0.614893 13:-0.896471 14:-0.761194 15:1 \n  480.92184833294999 1:-0.924456 2:0.333333 3:-0.216346 4:-0.537165 5:-0.948387 6:0.364421 7:-0.512315 8:-0.955333 9:-0.877551 10:-0.777895 11:-0.874751 12:-0.544393 13:-0.98794 14:-0.0746269 15:-1 \n  5504 1:-0.804097 2:0.594771 3:-0.399038 4:-0.408429 5:-0.873548 6:0.264249 7:-0.364532 8:-0.957698 9:-0.810324 10:-0.53358 11:-0.78171 12:-0.551002 13:-0.98794 14:-0.164179 15:1 \n  5504 1:-0.605634 2:0.764706 3:-0.163462 4:-0.123065 5:-0.725161 6:-0.074266 7:-0.310345 8:-0.990955 9:-0.548619 10:-0.654151 11:-0.807952 12:-0.709628 13:-0.98995 14:-0.58209 15:1 \n  5504 1:-0.695262 2:0.594771 3:-0.783654 4:-0.252107 5:-0.44129 6:-0.177893 7:-0.456885 8:-0.874765 9:-0.839136 10:-0.736647 11:-0.751491 12:-0.584049 13:-0.984925 14:0.462687 15:1 \n  5504 1:-0.941101 2:0.320261 3:-0.206731 4:-0.144828 5:-0.905806 6:-0.126079 7:-0.724138 8:-0.949767 9:-0.906363 10:-0.539926 11:-0.817893 12:-0.568627 13:-0.896471 14:0.462687 15:-1 \n  5504 1:-0.571063 2:0.816993 3:-0.235577 4:0.0574713 5:-0.649032 6:-0.219344 7:-0.384236 8:-0.957698 9:-0.486194 10:-0.60853 11:-0.813519 12:-0.570831 13:-0.974874 14:-0.104478 15:1 \n  5504 1:-0.815621 2:0.424837 3:-0.163462 4:-0.681226 5:-0.92129 6:0.374784 7:-0.325123 8:-0.957698 9:-0.927971 10:-0.527234 11:-0.875547 12:-0.654549 13:-0.986935 14:-0.731343 15:-1 \n  5504 1:-0.618438 2:0.267974 3:-0.350962 4:0.0298851 5:-0.686452 6:-0.226252 7:-0.428571 8:-0.957698 9:-0.935174 10:-0.484929 11:-0.858847 12:-0.632518 13:-0.98794 14:-0.641791 15:-1 \n  5504 1:-0.665813 2:0.372549 3:-0.365385 4:-0.31954 5:-0.789677 6:0.105354 7:-0.280788 8:-0.957698 9:-0.771909 10:-0.673189 11:-0.874354 12:-0.614893 13:-0.984925 14:-0.522388 15:-1 \n  5504 1:-0.836108 2:0.333333 3:-0.355769 4:-0.328736 5:-0.877419 6:0.0397237 7:-0.527094 8:-0.957698 9:-0.807923 10:-0.630883 11:-0.858847 12:-0.652346 13:-0.984925 14:0.343284 15:-1 \n  5504 1:-0.496799 2:0.542484 3:-0.149038 4:-0.0896552 5:-0.63871 6:-0.0639033 7:-0.172414 8:-0.957698 9:-0.831933 10:-0.733474 11:-0.869583 12:-0.610487 13:-0.98794 14:-0.641791 15:-1 \n  5504 1:-0.836108 2:0.45098 3:-0.225962 4:-0.160153 5:-0.852903 6:0.00863558 7:-0.541872 8:-0.93947 9:-0.848739 10:-0.727129 11:-0.874751 12:-0.544393 13:-0.965829 14:-0.223881 15:-1 \n  5504 1:-0.641485 2:0.542484 3:0.677885 4:-0.0191571 5:-0.376774 6:-0.126079 7:-0.389163 8:-0.957698 9:-0.858343 10:-0.49762 11:-0.881113 12:-0.467284 13:-0.896471 14:0.492537 15:-1 \n  5504 1:-0.763124 2:0.0980392 3:-0.158654 4:-0.157088 5:-0.815484 6:-0.0915371 7:-0.527094 8:-0.957698 9:-0.882353 10:-0.72184 11:-0.860835 12:-0.555409 13:-0.98794 14:-0.373134 15:-1 \n  5504 1:-0.728553 2:0.45098 3:-0.4375 4:-0.114176 5:-0.783226 6:-0.115717 7:-0.482759 8:-0.888402 9:-0.779112 10:-0.420412 11:-0.859642 12:-0.531174 13:-0.984925 14:0.223881 15:-1 \n  5504 1:-0.613316 2:0.320261 3:-0.326923 4:-0.549425 5:-0.810323 6:0.516408 7:0.123153 8:-0.957003 9:-0.918367 10:-0.701745 11:-0.886282 12:-0.694206 13:-0.98794 14:-0.373134 15:-1 \n  5504 1:-0.572343 2:0.503268 3:-0.466346 4:0.0727969 5:-0.646452 6:-0.274611 7:-0.428571 8:-0.957698 9:-0.841537 10:-0.64569 11:-0.850497 12:-0.484472 13:-0.896471 14:-0.61194 15:-1 \n  5504 1:-0.108835 2:0.189542 3:0.725962 4:0.434483 5:-0.203871 6:-0.671848 7:-0.502463 8:-0.858067 9:-0.867947 10:0.380222 11:-0.479125 12:-0.352721 13:-0.929648 14:0.253731 15:1 \n  5504 1:-0.636364 2:0.398693 3:0.408654 4:-0.42069 5:-0.793548 6:0.0639033 7:-0.246305 8:-0.946288 9:-0.89916 10:-0.510312 11:-0.808748 12:-0.531174 13:-0.98593 14:0.432836 15:1 \n  5504 1:-0.608195 2:0.398693 3:0.206731 4:0.0574713 5:-0.672258 6:-0.115717 7:-0.344828 8:-0.989842 9:-0.807923 10:-0.749339 11:-0.90338 12:-0.46508 13:-0.914573 14:-0.164179 15:-1 \n  5504 1:-0.766965 2:0.424837 3:0.230769 4:-0.377778 5:-0.849032 6:0.222798 7:-0.330049 8:-0.90677 9:-0.781513 10:-0.861449 11:-0.947117 12:-0.0222516 13:-0.366834 14:-0.671642 15:-1 \n  5504 1:-0.741357 2:0.254902 3:-0.302885 4:0.0565517 5:-0.75871 6:-0.354059 7:-0.640394 8:-0.957698 9:-0.740696 10:-0.924907 11:-0.797217 12:-1 13:-0.896471 14:0.283582 15:-1 \n  5504 1:-0.259923 2:0.320261 3:0.0721154 4:0.198774 5:-0.39871 6:-0.492228 7:-0.374384 8:-0.993043 9:-0.846339 10:-0.480698 11:-0.733598 12:-0.731659 13:-0.966834 14:0.343284 15:1 \n  5504 1:-0.524968 2:0.24183 3:-0.375 4:-0.0844444 5:-0.654194 6:-0.143351 7:-0.270936 8:-0.948375 9:-0.647059 10:-0.586462 11:-0.84493 12:-0.462877 13:-0.945729 14:0.373134 15:-1 \n  5504 1:-0.544174 2:0.333333 3:-0.350962 4:-0.04 5:-0.655484 6:-0.264249 7:-0.394089 8:-0.911222 9:-0.812725 10:-0.671074 11:-0.836978 12:-0.661159 13:-0.984925 14:0.671642 15:-1 \n  5504 1:-0.458387 2:0.594771 3:-0.0528846 4:-0.0786207 5:-0.612903 6:-0.122625 7:-0.17734 8:-0.95589 9:-0.747899 10:-0.406663 11:-0.836978 12:-0.553206 13:-0.968844 14:0.58209 15:-1 \n  5504 1:-0.318822 2:0.0718954 3:-0.0336538 4:0.338851 5:-0.394839 6:-0.647668 7:-0.586207 8:-0.95742 9:-0.647059 10:-0.702803 11:-0.860835 12:-0.661159 13:-0.943719 14:0.432836 15:-1 \n  5504 1:-0.523688 2:0.163399 3:0.399038 4:0.386973 5:-0.535484 6:-0.740933 7:-0.778325 8:-0.983163 9:-0.7503 10:-0.755685 11:-0.729622 12:-0.522362 13:-0.958794 14:-0.104478 15:1 \n  5504 1:-0.514725 2:0.346405 3:-0.822115 4:-0.125824 5:-0.658065 6:0.0639033 7:-0.0837438 8:-0.959786 9:-0.579832 10:-0.583289 11:-0.926044 12:-0.379158 13:-0.955779 14:0.462687 15:-1 \n  5504 1:-0.846351 2:0.163399 3:-0.591346 4:0.254866 5:-0.79871 6:-0.561313 7:-0.832512 8:-0.945314 9:-0.858343 10:-0.643575 11:-0.918489 12:-0.524565 13:-0.963819 14:-0.223881 15:-1 \n  5504 1:-0.699104 2:0.437908 3:0.0432692 4:-0.138084 5:-0.769032 6:-0.0466321 7:-0.403941 8:-0.968413 9:-0.858343 10:-0.692226 11:-0.949901 12:-0.533377 13:-0.976884 14:0.373134 15:-1 \n  3681.9311376921992 1:-0.770807 2:0.267974 3:-0.605769 4:-0.672031 5:-0.901935 6:0.395509 7:-0.236453 8:-0.942809 9:-0.807923 10:-0.496563 11:-0.807952 12:-0.50033 13:-0.98995 14:0.432836 15:-1 \n  5504 1:-0.619718 2:0.215686 3:-0.120192 4:0.0350958 5:-0.683871 6:-0.267703 7:-0.472906 8:-0.998052 9:-0.817527 10:-0.666843 11:-0.915308 12:-0.445252 13:-0.896471 14:0.402985 15:-1 \n  5504 1:-0.37644 2:0.490196 3:0.548077 4:-0.0942529 5:-0.567742 6:-0.184801 7:-0.147783 8:-0.98859 9:-0.819928 10:-0.658382 11:-0.777336 12:-0.515752 13:-0.892462 14:0.791045 15:1 \n  5504 1:-0.700384 2:0.398693 3:-0.408654 4:0.0602299 5:-0.731613 6:-0.250432 7:-0.536946 8:-0.911779 9:-0.721489 10:-0.501851 11:-0.709742 12:-0.482705 13:-0.842211 14:0.373134 15:1 \n  5504 1:-0.728553 2:0.424837 3:-0.548077 4:-0.601533 5:-0.870968 6:0.478411 7:-0.1133 8:-0.957698 9:-0.855942 10:-0.491274 11:-0.809145 12:-0.747081 13:-0.98995 14:0.0746269 15:1 \n  5504 1:-0.758003 2:0.503268 3:-0.543269 4:-0.296245 5:-0.830968 6:0.0189983 7:-0.438424 8:-0.957698 9:-0.587035 10:-0.575886 11:-0.789264 12:-0.619299 13:-0.986935 14:-0.164179 15:1 \n  5504 1:-0.709347 2:-0.0326797 3:-0.509615 4:0.302375 5:-0.691613 6:-0.623489 7:-0.788177 8:-0.933765 9:-0.920768 10:-0.893178 11:-0.860835 12:-0.762503 13:-0.98995 14:0.552239 15:-1 \n  5504 1:-0.763124 2:0.411765 3:0.346154 4:-0.172414 5:-0.812903 6:-0.0708117 7:-0.492611 8:-0.938078 9:-0.67587 10:-0.872025 11:-0.89662 12:-0.606081 13:-0.975879 14:0.402985 15:-1 \n  5504 1:-0.683739 2:0.294118 3:-0.625 4:-0.0654406 5:-0.656774 6:-0.198618 7:-0.487685 8:-0.996382 9:-0.815126 10:-0.766261 11:-0.868787 12:-0.639128 13:-0.98995 14:0.0447761 15:-1 \n  5504 1:-0.78233 2:0.0718954 3:-0.408654 4:-0.0982375 5:-0.811613 6:-0.170984 7:-0.576355 8:-0.957698 9:-0.805522 10:-0.649921 11:-0.817097 12:-0.676581 13:-0.937688 14:-0.492537 15:-1 \n  5504 1:-0.551857 2:0.294118 3:0.105769 4:-0.0314176 5:-0.658065 6:-0.146805 7:-0.305419 8:-0.993321 9:-0.863145 10:-0.575886 11:-0.87674 12:-0.643534 13:-0.896471 14:0.343284 15:-1 \n  5504 1:-0.733675 2:0.411765 3:0.302885 4:-0.123065 5:-0.787097 6:0.00863558 7:-0.408867 8:-0.991651 9:-0.726291 10:-0.248017 11:-0.737575 12:-0.573034 13:-0.867337 14:-0.104478 15:-1 \n  5504 1:-0.775928 2:0.464052 3:-0.269231 4:-0.302989 5:-0.84129 6:0.0673575 7:-0.433498 8:-0.914423 9:-0.817527 10:-0.787414 11:-0.840954 12:-0.661159 13:-0.98995 14:-0.0746269 15:-1 \n  5504 1:-0.736236 2:0.281046 3:-0.817308 4:-0.0954789 5:-0.783226 6:-0.19171 7:-0.536946 8:-0.991234 9:-0.82473 10:-0.601269 11:-0.894235 12:-0.672174 13:-0.896471 14:0.373134 15:-1 \n  5504 1:0.888604 2:0.215686 3:0.543269 4:0.690115 5:0.750968 6:-0.88601 7:-0.502463 8:-0.910248 9:-0.527011 10:0.971444 11:-0.64334 12:-0.469487 13:-0.920603 14:-0.283582 15:1 \n  5504 1:-0.477593 2:0.699346 3:-0.793269 4:-0.485977 5:-0.732903 6:0.0604491 7:-0.0394089 8:-0.998052 9:-0.810324 10:-0.523004 11:-0.829026 12:-0.636924 13:-0.98995 14:0.402985 15:1 \n  5504 1:-0.321383 2:0.320261 3:0.471154 4:0.148506 5:-0.458065 6:-0.37133 7:-0.29064 8:-0.975649 9:-0.932773 10:-0.639344 11:-0.84493 12:-0.482705 13:-0.955779 14:0.552239 15:-1 \n  1660.3693731578417 1:-0.743918 2:0.294118 3:0.254808 4:-0.284598 5:-0.821935 6:-0.0500864 7:-0.458128 8:-0.867112 9:-0.654262 10:-0.734532 11:-0.856859 12:-0.559815 13:-0.177889 14:0.313433 15:-1 \n  5504 1:-0.619718 2:0.398693 3:-0.134615 4:-0.112337 5:-0.717419 6:-0.212435 7:-0.428571 8:-0.957698 9:-0.776711 10:-0.807509 11:-0.84334 12:-0.50694 13:-0.984925 14:-0.134328 15:-1 \n  5504 1:-0.56338 2:0.254902 3:-0.370192 4:-0.12092 5:-0.686452 6:-0.112263 7:-0.29064 8:-0.998609 9:-0.906363 10:-0.660497 11:-0.805169 12:-0.751487 13:-0.896471 14:-1 15:-1 \n  5504 1:-0.422535 2:0.751634 3:-0.548077 4:0.00536398 5:-0.566452 6:-0.298791 7:-0.305419 8:-0.971613 9:-0.740696 10:-0.597039 11:-0.745527 12:-0.603878 13:-0.896471 14:0.104478 15:1 \n  5504 1:-0.702945 2:0.346405 3:0.100962 4:-0.150345 5:-0.774194 6:-0.19171 7:-0.502463 8:-0.973422 9:-0.865546 10:-0.713379 11:-0.840954 12:-0.581846 13:-0.98995 14:0.104478 15:-1 \n  2352.0398022741365 1:-0.0665813 2:0.529412 3:-0.0913462 4:0.326284 5:-0.212903 6:-0.488774 7:-0.231527 8:-0.844291 9:-0.714286 10:0.43945 11:-0.0536779 12:-0.361533 13:-0.907538 14:-0.402985 15:1 \n  5504 1:-0.620999 2:0.333333 3:0.307692 4:-0.00383142 5:-0.694194 6:-0.215889 7:-0.433498 8:-0.957698 9:-0.740696 10:-0.639344 11:-0.904573 12:-0.438643 13:-0.896471 14:0.343284 15:-1 \n  5504 1:-0.564661 2:0.633987 3:-0.663462 4:-0.34682 5:-0.740645 6:0.0811744 7:-0.137931 8:-0.987616 9:-0.627851 10:-0.628768 11:-0.749503 12:-0.427627 13:-0.896471 14:0.462687 15:1 \n  5504 1:-0.600512 2:0.51634 3:-0.701923 4:-0.789425 5:-0.858065 6:0.322971 7:2.22045e-16 8:-0.968274 9:-0.829532 10:-0.702803 11:-0.82505 12:-0.707425 13:-0.977889 14:-0.223881 15:1 \n  5504 1:-0.37388 2:0.79085 3:-0.600962 4:-0.0669732 5:-0.557419 6:-0.260794 7:-0.221675 8:-0.990399 9:-0.668667 10:-0.671074 11:-0.821074 12:-0.484472 13:-0.98995 14:-0.104478 15:1 \n  5504 1:-0.760563 2:0.267974 3:0.423077 4:0.208582 5:-0.745806 6:-0.378238 7:-0.674877 8:-0.970222 9:-0.793517 10:-0.575886 11:-0.884692 12:-0.350518 13:-0.714573 14:-0.0746269 15:-1 \n  5504 1:-0.665813 2:0.398693 3:-0.394231 4:-0.11295 5:-0.744516 6:-0.0984456 7:-0.399015 8:-0.992208 9:-0.882353 10:-0.692226 11:-0.868787 12:-0.720643 13:-0.98995 14:0.0746269 15:-1 \n  5504 1:-0.542894 2:0.111111 3:-0.0576923 4:-0.062069 5:-0.659355 6:-0.0328152 7:-0.20197 8:-0.983998 9:-0.887155 10:-0.649921 11:-0.8334 12:-0.54219 13:-0.974874 14:0.134328 15:-1 \n  5504 1:-0.820743 2:0.51634 3:-0.278846 4:-0.101609 5:-0.834839 6:-0.260794 7:-0.660099 8:-0.970222 9:-0.810324 10:-0.575886 11:-0.805169 12:-0.581846 13:-0.980905 14:0.0149254 15:1 \n  5504 1:-0.677337 2:0.267974 3:0.394231 4:-0.028046 5:-0.734194 6:-0.1019 7:-0.413793 8:-0.992903 9:-0.817527 10:-0.618191 11:-0.884692 12:-0.590659 13:-0.973869 14:-0.253731 15:-1 \n  5504 1:-0.176697 2:0.738562 3:0.201923 4:0.129502 5:-0.366452 6:-0.37133 7:-0.167488 8:-0.917762 9:-0.77431 10:-0.427816 11:-0.757455 12:-0.513549 13:-0.899497 14:-0.432836 15:1 \n  5504 1:-0.332907 2:0.437908 3:0.576923 4:0.0583908 5:-0.740645 6:-0.398964 7:-0.330049 8:-0.967996 9:-0.858343 10:-0.734532 11:-0.856859 12:-0.443049 13:-0.958794 14:0.223881 15:1 \n  5504 1:-0.558259 2:0.281046 3:-0.326923 4:-0.618391 5:-0.80129 6:0.364421 7:0.0985222 8:-0.993738 9:-0.651861 10:-0.372819 11:-0.901789 12:-0.592862 13:-0.896471 14:-0.313433 15:-1 \n  5504 1:-0.828425 2:1 3:-0.413462 4:-0.355096 5:-0.877419 6:0.284974 7:-0.394089 8:-0.987755 9:-0.80072 10:-0.745108 11:-0.785288 12:-0.634721 13:-0.98995 14:0.0746269 15:1 \n  5504 1:-0.846351 2:0.464052 3:0.625 4:-0.439693 5:-0.899355 6:0.243523 7:-0.44335 8:-0.976762 9:-0.683073 10:-0.745108 11:-0.840954 12:-0.460674 13:-0.923618 14:0.58209 15:1 \n  5504 1:-0.601793 2:0.24183 3:-0.701923 4:-0.11908 5:-0.708387 6:-0.015544 7:-0.261084 8:-0.99666 9:-0.848739 10:-0.660497 11:-0.797217 12:-0.502534 13:-0.896471 14:-0.104478 15:-1 \n  5504 1:-0.330346 2:0.398693 3:-0.384615 4:0.34682 5:-0.40129 6:-0.571675 7:-0.512315 8:-0.953941 9:-0.870348 10:-0.544157 11:-0.840954 12:-0.731659 13:-0.98995 14:0.343284 15:-1 \n  -13312 1:-0.709347 2:0.215686 3:-0.774038 4:-0.693487 5:-0.88 6:0.416235 7:-0.133005 8:-0.992625 9:-0.846339 10:-0.79799 11:-0.852883 12:-0.559815 13:-1 14:-0.253731 15:-1 \n  -13312 1:-0.120359 2:0.411765 3:-0.274038 4:0.422222 5:-0.221935 6:-0.73057 7:-0.576355 8:-0.978458 9:-0.611044 10:-0.660497 11:-0.765408 12:-0.623706 13:-0.901748 14:-0.0746269 15:1 \n  -3748.008357330848 1:-0.462228 2:0.424837 3:-0.533654 4:-0.595402 5:-0.754839 6:0.588946 7:0.458128 8:-0.978458 9:-0.831933 10:-0.628768 11:-0.916501 12:-0.599471 13:-0.901748 14:0.134328 15:-1 \n  -9780.5884528931365 1:-0.363636 2:0.594771 3:0.168269 4:0.0145594 5:-0.531613 6:-0.195164 7:-0.133005 8:-0.963125 9:-0.85114 10:-0.607615 11:-0.725646 12:-0.650143 13:-0.901748 14:-0.492537 15:1 \n  -13312 1:-0.37388 2:0.30719 3:-0.956731 4:0.342529 5:-0.434839 6:-0.519862 7:-0.477833 8:-0.983998 9:-0.726291 10:-0.649921 11:-0.781312 12:-0.696409 13:-1 14:-0.791045 15:1 \n  -13012.888336512973 1:-0.927017 2:0.346405 3:-0.831731 4:0.100383 5:-0.88 6:-0.298791 7:-0.773399 8:-0.995269 9:-0.781513 10:-0.544157 11:-0.82505 12:-0.663362 13:-0.98995 14:0.283582 15:1 \n  -13312 1:-0.568502 2:0.45098 3:-0.4375 4:-0.310345 5:-0.738065 6:0.298791 7:0.0147783 8:-0.978458 9:-0.776711 10:-0.480698 11:-0.860835 12:-0.614893 13:-0.901748 14:0.253731 15:-1 \n  -11476.324533894292 1:-0.619718 2:0.30719 3:-0.855769 4:0.557088 5:-0.570323 6:-0.661485 7:-0.773399 8:-0.978458 9:-0.908764 10:-0.872025 11:-0.89662 12:-0.434237 13:-0.901748 14:-0.552239 15:-1 \n  -13312 1:-0.734955 2:0.738562 3:-0.0769231 4:-0.613793 5:-0.88 6:0.37133 7:-0.182266 8:-0.990816 9:-0.793517 10:-0.671074 11:-0.769384 12:-0.621503 13:-0.98392 14:0.373134 15:1 \n  -13312 1:-0.760563 2:0.111111 3:0.596154 4:-0.0773946 5:-0.789677 6:-0.00518135 7:-0.428571 8:-0.978458 9:-0.85114 10:-0.639344 11:-0.904573 12:-0.603878 13:-0.901748 14:-0.791045 15:-1 \n  -13312 1:-0.453265 2:0.254902 3:0.100962 4:0.25364 5:-0.51871 6:-0.595855 7:-0.625616 8:-0.993599 9:-0.656663 10:-0.734532 11:-0.944334 12:-0.535581 13:-0.966834 14:-0.0149254 15:-1 \n  -13312 1:-0.645327 2:0.411765 3:-0.269231 4:-0.175479 5:-0.750968 6:-0.129534 7:-0.37931 8:-0.995686 9:-0.817527 10:-0.723956 11:-0.912525 12:-0.553206 13:-0.98593 14:0.343284 15:-1 \n  -13312 1:-0.533931 2:-0.0326797 3:0.115385 4:-0.0375479 5:-0.647742 6:-0.164076 7:-0.300493 8:-0.978458 9:-1 10:1 11:1 12:-0.447455 13:-0.901748 14:0.19403 15:1 \n  -13312 1:-0.609475 2:0.503268 3:-0.0288462 4:-0.322605 5:-0.757419 6:-0.0362694 7:-0.285714 8:-0.970639 9:-0.879952 10:-0.68165 11:-0.952286 12:-0.667768 13:-0.901748 14:-0.820896 15:-1 \n  -13312 1:-0.927017 2:0.163399 3:-0.278846 4:-0.32567 5:-0.91871 6:0.0500864 7:-0.625616 8:-0.98205 9:-0.930372 10:-0.554733 11:-0.916501 12:-0.606081 13:-0.919598 14:0.253731 15:-1 \n  -13312 1:-0.862996 2:0.464052 3:0.0865385 4:-0.2 5:-0.88 6:-0.105354 7:-0.625616 8:-0.995269 9:-0.507803 10:-0.671074 11:-0.908549 12:-0.703018 13:-0.901748 14:-0.522388 15:-1 \n  -5266.5929802874643 1:-0.235595 2:0.79085 3:-0.322115 4:-0.135632 5:-0.505806 6:-0.530225 7:-0.428571 8:-0.999583 9:-0.836735 10:-0.586462 11:-0.848907 12:-0.390174 13:-0.979899 14:-0.462687 15:1 \n  -13312 1:-0.555698 2:0.45098 3:-0.466346 4:-0.0896552 5:-0.673548 6:-0.233161 7:-0.37931 8:-0.931817 9:-0.666267 10:-0.554733 11:-0.868787 12:-0.645737 13:-0.98593 14:0.462687 15:1 \n  -110.85993505999167 1:-0.325224 2:0.490196 3:0.245192 4:-0.166284 5:-0.557419 6:0.0431779 7:0.162562 8:-0.976901 9:-0.841537 10:-0.618191 11:-0.801193 12:-0.564221 13:-0.901748 14:-0.791045 15:1 \n  -10333.091396095011 1:-0.542894 2:0.51634 3:-0.389423 4:-0.500383 5:-0.763871 6:0.0535406 7:-0.133005 8:-0.979128 9:-0.889556 10:-0.544157 11:-0.956262 12:-0.632518 13:-0.955779 14:0.253731 15:-1 \n  -13312 1:-0.53009 2:0.477124 3:-0.225962 4:0.189272 5:-0.583226 6:-0.284974 7:-0.37931 8:-0.954081 9:-0.642257 10:-0.607615 11:-0.932406 12:-0.381362 13:-0.959799 14:-0.19403 15:-1 \n  -13312 1:-0.645327 2:0.424837 3:-0.221154 4:-0.273563 5:-0.763871 6:0.0777202 7:-0.231527 8:-0.971474 9:-0.819928 10:-0.850873 11:-0.916501 12:-0.575237 13:-0.901748 14:-0.731343 15:-1 \n  -13312 1:-0.722151 2:0.189542 3:-0.0384615 4:-0.380843 5:-0.828387 6:0.153713 7:-0.330049 8:-0.989564 9:-0.911164 10:-0.649921 11:-0.884692 12:-0.467284 13:-0.901748 14:-0.761194 15:-1 \n  -13312 1:-0.619718 2:0.764706 3:-1 4:0.0114943 5:-0.699355 6:-0.1019 7:-0.330049 8:-0.997913 9:-0.478992 10:-0.649921 11:-0.87674 12:-0.573034 13:-0.945729 14:0.641791 15:-1 \n  -13312 1:-0.619718 2:0.477124 3:0.317308 4:-0.104981 5:-0.712258 6:-0.112263 7:-0.330049 8:-0.930982 9:-0.743097 10:-0.819143 11:-0.932406 12:-0.610487 13:-0.979899 14:-0.19403 15:-1 \n  -13312 1:-0.542894 2:0.424837 3:-0.153846 4:-0.350192 5:-0.725161 6:0.136442 7:-0.0837438 8:-0.99179 9:-0.711885 10:-0.554733 11:-0.912525 12:-0.524565 13:-0.971859 14:0.313433 15:-1 \n  -13312 1:-0.690141 2:0.163399 3:-0.942308 4:-0.00689655 5:-0.738065 6:-0.25734 7:-0.53202 8:-0.985946 9:-0.457383 10:-0.53358 11:-0.87674 12:-0.469487 13:-0.980905 14:0.671642 15:1 \n  -13312 1:-0.338028 2:0.346405 3:0.225962 4:0.514176 5:-0.350968 6:-0.678756 7:-0.625616 8:-0.905656 9:-0.743097 10:-0.649921 11:-0.884692 12:-0.694206 13:-0.901748 14:0.283582 15:1 \n  -13312 1:-0.222791 2:0.895425 3:0.134615 4:0.00536398 5:-0.44129 6:-0.246978 7:-0.0344828 8:-0.913449 9:-0.786315 10:-0.523004 11:-0.856859 12:-0.548799 13:-0.972864 14:-0.701493 15:1 \n  -13312 1:-0.261204 2:0.45098 3:0.0769231 4:0.0329502 5:-0.454194 6:-0.160622 7:0.0147783 8:-0.893829 9:-0.839136 10:-0.618191 11:-0.872763 12:-0.528971 13:-0.979899 14:0.0447761 15:-1 \n  -11324.174715814028 1:-0.683739 2:0.385621 3:-0.350962 4:-0.270498 5:-0.789677 6:0.0639033 7:-0.330049 8:-0.998748 9:-0.853541 10:-0.586462 11:-0.89662 12:-0.568627 13:-0.910553 14:0.641791 15:-1 \n  -13312 1:-0.90653 2:0.542484 3:-0.0673077 4:-0.466667 5:-0.931613 6:0.246978 7:-0.53202 8:-0.994017 9:-0.783914 10:-0.628768 11:-0.793241 12:-0.588456 13:-0.901748 14:-0.373134 15:1 \n  -11360.838220618649 1:-0.696543 2:0.411765 3:-0.144231 4:-0.123372 5:-0.763871 6:-0.115717 7:-0.428571 8:-0.978458 9:-0.915966 10:-0.68165 11:-0.964215 12:-0.658956 13:-0.901748 14:-0.522388 15:-1 \n  -13312 1:-0.645327 2:0.372549 3:-0.427885 4:0.0697318 5:-0.686452 6:-0.177893 7:-0.428571 8:-0.899116 9:-0.896759 10:-0.671074 11:-0.904573 12:-0.522362 13:-0.901748 14:-0.0746269 15:-1 \n  -13312 1:-0.708067 2:0.411765 3:-0.447115 4:0.0329502 5:-0.741935 6:-0.198618 7:-0.512315 8:-0.998887 9:-0.839136 10:-0.649921 11:-0.87674 12:-0.652346 13:-0.901748 14:-0.791045 15:-1 \n  -13312 1:-0.670935 2:0.124183 3:-0.173077 4:0.0697318 5:-0.712258 6:-0.278066 7:-0.527094 8:-0.985807 9:-0.939976 10:-0.628768 11:-0.916501 12:-0.423221 13:-0.901748 14:-0.343284 15:-1 \n  -13312 1:-0.524968 2:0.385621 3:-0.25 4:0.0727969 5:-0.615484 6:-0.495682 7:-0.571429 8:-0.934321 9:-0.911164 10:-0.671074 11:-0.884692 12:-0.50033 13:-0.978894 14:0.223881 15:1 \n  -13312 1:-0.696543 2:0.215686 3:0.451923 4:0.180077 5:-0.699355 6:-0.350604 7:-0.576355 8:-0.96076 9:-0.915966 10:-0.723956 11:-0.916501 12:-0.57744 13:-0.969849 14:-0.641791 15:-1 \n  -13312 1:-0.859155 2:0.333333 3:-0.461538 4:-0.350192 5:-0.892903 6:0.0500864 7:-0.551724 8:-0.990677 9:-0.803121 10:-0.607615 11:-0.928429 12:-0.592862 13:-0.927638 14:0.0149254 15:-1 \n  -13312 1:-0.299616 2:0.30719 3:-0.423077 4:-0.0436782 5:-0.505806 6:-0.177893 7:-0.0344828 8:-0.899951 9:-0.815126 10:-0.624537 11:-0.880716 12:-0.599471 13:-0.975879 14:0.552239 15:-1 \n  -13312 1:-0.773367 2:0.385621 3:0.427885 4:-0.399234 5:-0.854194 6:0.115717 7:-0.37931 8:-0.984972 9:-0.860744 10:-0.70386 11:-0.952286 12:-0.575237 13:-0.901748 14:-0.641791 15:-1 \n  -13312 1:-0.3137 2:0.581699 3:-0.100962 4:0.0942529 5:-0.470968 6:-0.319516 7:-0.226601 8:-0.978458 9:-0.529412 10:-0.578001 11:-0.836978 12:-0.661159 13:-0.901748 14:-0.61194 15:-1 \n  -13312 1:-0.862996 2:0.607843 3:-0.586538 4:-0.503448 5:-0.91871 6:0.250432 7:-0.477833 8:-0.981215 9:-0.85114 10:-0.534638 11:-0.789264 12:-0.630315 13:-0.992965 14:-0.552239 15:1 \n  \n  `\n\n  static feature_scaling_string =\n  `\n  1 2.23 17.850000000000001\n  2 17 170\n  3 71 487\n  4 29.899999999999999 95.150000000000006\n  5 0.87 16.370000000000001\n  6 4.0999999999999996 62\n  7 0.23999999999999999 4.2999999999999998\n  8 0.10000000000000001 143.83000000000001\n  9 2.2000000000000002 85.5\n  10 0.68999999999999995 19.600000000000001\n  11 27 530\n  12 0.20000000000000001 908\n  13 0.10000000000000001 20\n  14 20 87\n  15 0 1\n  `;\n}\n","// @ts-ignore\nimport * as svm from 'libsvm-js/asm'\n\nenum Feature{\n  max,\n  min\n};\n\nexport function svm_predict_with_model (\n  /* the input array of numbers (length of N) for inference */\n  array_to_predict: number[],\n\n  /* serialized model in string format, which is generated by svm-train libsvm */\n  /* Check svm_covid_19_model_parameters.ts for example */\n  serialized_model: string,\n\n  feature_min_max: string\n): -1 | 1 {\n  // preprocess input vector\n\n  console.log(feature_min_max)\n  const feature_min_array = parse_feature_scaling_string(feature_min_max, Feature.min)\n  const feature_max_array = parse_feature_scaling_string(feature_min_max, Feature.max)\n\n  // show in console\n  console.log('Feature max and min: '); console.log(feature_max_array); console.log(feature_min_array)\n\n  const preprocessed_vector = scale_input_array(\n    array_to_predict,\n    feature_min_array,\n    feature_max_array\n  )\n\n  console.log('Preprocessed vector is ' + preprocessed_vector)\n  // load the model\n  const pretrained_model = svm.load(serialized_model)\n\n  // predict the parameters. The predict function takes a 2D array of number.\n  // so we input as a *1 vector and get the label with index of 1\n  const label = pretrained_model.predict([preprocessed_vector])\n  return label[0]\n}\n\n/* This function is to preprocess the input array of numbers with max\nand min value from training dataset, which is just the same as svm-scale */\nfunction scale_input_array (array_to_predict: number[], feature_min_array: number[]\n  , feature_max_array: number[]): number[] {\n  if (array_to_predict.length !== feature_max_array.length ||\n    array_to_predict.length !== feature_min_array.length) {\n    throw new Error('Please check input dimensions.')\n  }\n\n  const return_vector: number[] = new Array(array_to_predict.length)\n\n  for (let i = 0; i < array_to_predict.length; i++) {\n    return_vector[i] =\n      (array_to_predict[i] - feature_min_array[i]) /\n      (feature_max_array[i] - feature_min_array[i])\n  }\n\n  return return_vector\n}\n\nfunction isEmptyOrSpaces (str:string):boolean {\n  return str === null || str.match(/^ *$/) !== null\n}\n\n/* This function is to parse the feature max/min string into array of numbers */\nfunction parse_feature_scaling_string (input_string:string, option:Feature) : number[] {\n  const return_array: number[] = []\n\n  // 1. Split input_string into array of string by new line '\\n' and/or '\\r\\n'\n  const splitted_result = input_string.split(/\\r?\\n/)\n\n  console.log('feature max min array splitted result: ')\n  console.log(splitted_result)\n  // 2. split each line by space, then add max or min value of current feature into return_array\n  for (const each_line of splitted_result) {\n    console.log(each_line)\n    const splitted_each_line = each_line.split(' ')\n\n    const each_line_numbers = []\n\n    for (const each_string of splitted_each_line) {\n      if (each_string.length !== 0) {\n        each_line_numbers.push(each_string)\n      }\n    }\n\n    console.log('each line: ')\n    console.log(each_line_numbers)\n\n    if (each_line_numbers.length !== 3 || isEmptyOrSpaces(each_line)) continue\n    if (option === Feature.max) {\n      return_array.push(parseFloat(each_line_numbers[2]))\n    } else {\n      return_array.push(parseFloat(each_line_numbers[1]))\n    }\n  }\n\n  console.log('parsing result')\n  console.log(return_array)\n\n  return return_array\n}\n","import Model from '../lib/svm_model'\nimport { svm_predict_with_model } from '../lib/svm_inference'\n\nexport const getSVMPredict = (\n  input: number[]\n): Promise<1 | -1> => {\n  return new Promise((resolve) => {\n    const res = svm_predict_with_model(\n      // this is user's input, an array of N numbers\n      [...input],\n\n      // this is the raw string of pretrained model file\n      Model.str_Model_Mild_Vs_Viral,\n\n      // this is the scaling parameters N * 2\n      Model.feature_scaling_string\n    )\n    resolve(res)\n  })\n}\n","import { Unit } from '../components/UnitDisplay'\n\ntype FeatureBase = {\n  name: string\n}\n\ninterface Feature extends FeatureBase {\n  type: 'base'\n}\n\ninterface Gender extends FeatureBase {\n  type: 'gender'\n}\n\ntype FeatureInput = ((Feature & { unit: Unit }) | Gender) & {\n  error: boolean\n}\n\nexport const formData: FeatureInput[] = [\n  { type: 'base', name: 'Count of White blood cell (WBC)', error: false, unit: '10<sup>3</sup>/mL' },\n  { type: 'base', name: 'Hemoglobin (HGB)', error: false, unit: 'g/L' },\n  { type: 'base', name: 'Platelet', error: false, unit: '10<sup>3</sup>/mL' },\n  { type: 'base', name: 'Neutrophil percentage', error: false, unit: '%' },\n  { type: 'base', name: 'Neutrophil count', error: false, unit: '10<sup>3</sup>/mL' },\n  { type: 'base', name: 'Lymphocyte percentage', error: false, unit: '%' },\n  { type: 'base', name: 'Lymphocyte count', error: false, unit: '10<sup>3</sup>/mL' },\n  { type: 'base', name: 'C-reaction protein (CRP)', error: false, unit: 'mg/L' },\n  {\n    type: 'base',\n    name: 'Total bilirubin (TBL)',\n    error: false,\n    unit: [['umol/L', value => (value / 17.1036)], ['mg/dL']]\n  },\n  {\n    type: 'base',\n    name: 'Blood urea nitrogen (BUN)',\n    error: false,\n    unit: [['mmol/L', value => (value / 0.3571)], ['mg/dL']]\n  },\n  { type: 'base', name: 'Creatinine', error: false, unit: [['umol/L', value => (value / 88.417)], ['mg/dL']] },\n  { type: 'base', name: 'Lactate dehydrogenase (LDH)', error: false, unit: 'U/L' },\n  { type: 'base', name: 'D-dimer', error: false, unit: 'mg/L' },\n  { type: 'base', name: 'Age', error: false, unit: '' },\n  { type: 'gender', name: 'Gender', error: false }\n]\n","import React, { useCallback, useState } from 'react'\nimport { useLocalStore, useObserver } from 'mobx-react'\nimport {\n  Container, CssBaseline, FormControl, InputLabel, MenuItem,\n  Select, Button, Snackbar, InputAdornment\n} from '@material-ui/core'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { Send } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport NumberInput from '../components/NumberInput'\nimport UnitDisplay from '../components/UnitDisplay'\nimport OutputDialog from './Home/OutputDialog'\nimport { getSVMPredict } from '../api'\nimport { formData } from '../data'\n\nconst createStore = () => ({\n  form: new Array(15) as number[],\n  type: 0,\n  data: [...formData]\n})\n\nconst formStoreContext = React.createContext <ReturnType<typeof createStore> | null>(null)\n\nconst useFormStore = () => {\n  const store = React.useContext(formStoreContext)\n  if (!store) {\n    throw new Error('useFormStore must be used within a StoreProvider')\n  }\n  return store\n}\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: theme.spacing(1)\n  },\n  inputField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '35ch',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  }\n}))\n\nconst HomePageConsumer: React.FC = () => {\n  const classes = useStyles()\n  const formStore = useFormStore()\n  const homeStore = useLocalStore(() => ({\n    openDialog: false,\n    dialogData: {\n      text: ''\n    },\n    showMessage: (text: string) => {\n      homeStore.openDialog = true\n      homeStore.dialogData.text = text\n    }\n  }))\n  const [isSnackbarOpen, setSnackbarOpen] = useState<boolean>(false)\n  const [snackbarMessage, setSnackbarMessage] = useState<string>('')\n  const setField = useCallback((index: number, value: number) => {\n    formStore.form[index] = value\n    formStore.data[index].error = false\n  }, [formStore.form, formStore.data])\n  const showError = useCallback((errorMessage: string) => {\n    setSnackbarOpen(true)\n    setSnackbarMessage(errorMessage)\n  }, [])\n  const enter = useCallback(() => {\n    formStore.form.forEach((item, index) => {\n      if (item == null) {\n        !isSnackbarOpen && showError(`'${formData[index].name}' is empty`)\n        formStore.data[index].error = true\n      }\n    })\n    if (formStore.data.some(item => item.error)) {\n      return\n    }\n    getSVMPredict([...formStore.form]).then(res => {\n      if (res === -1) {\n        homeStore.showMessage('COVID-19 likely')\n      } else {\n        homeStore.showMessage('non-COVID-19 likely')\n      }\n    })\n  }, [formStore.form, formStore.data, showError, isSnackbarOpen, homeStore])\n  return useObserver(() => (\n    <Container maxWidth='md'>\n      <CssBaseline/>\n      <FormControl className={classes.formControl} style={{ marginTop: '1rem' }}>\n        <InputLabel>Type</InputLabel>\n        <Select\n          className={classes.inputField}\n          defaultValue={0}\n          onChange={(event) => {\n            formStore.type = Number(event.target.value as number)\n          }}\n        >\n          <MenuItem value={0}>Mild vs Viral</MenuItem>\n        </Select>\n        {formStore.data.map((item, index) => {\n          if (item.type === 'base') {\n            return (\n              <NumberInput\n                className={classes.inputField}\n                error={item.error}\n                label={item.name}\n                endAdornment={<InputAdornment position='end'><UnitDisplay unit={item.unit}/></InputAdornment>}\n                field={index}\n                key={index}\n                callback={setField}\n              />\n            )\n          } else if (item.type === 'gender') {\n            return (\n              <FormControl>\n                <InputLabel>Gender</InputLabel>\n                <Select\n                  className={classes.inputField}\n                  onChange={(target) => setField(index, Number(target.target.value))}\n                >\n                  <MenuItem value={1}>Male</MenuItem>\n                  <MenuItem value={0}>Female</MenuItem>\n                </Select>\n              </FormControl>\n            )\n          } else {\n            return null\n          }\n        })}\n      </FormControl>\n      <Button onClick={enter} variant='contained' color='primary' endIcon={<Send/>}>predict</Button>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={isSnackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => { setSnackbarOpen(false) }}\n      >\n        <MuiAlert elevation={6} variant='filled' severity='error'>{snackbarMessage}</MuiAlert>\n      </Snackbar>\n      <OutputDialog\n        open={homeStore.openDialog}\n        text={homeStore.dialogData.text}\n        onClose={() => { homeStore.openDialog = false }}\n      />\n    </Container>\n  ))\n}\n\nconst HomePage: React.FC = () => {\n  const formStore = useLocalStore(createStore)\n  return (\n    <formStoreContext.Provider value={formStore}>\n      <HomePageConsumer/>\n    </formStoreContext.Provider>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport {\n  AppBar, Toolbar, Typography\n} from '@material-ui/core'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/Home'\n\nconst fixedURL = (url: string) => `${process.env.PUBLIC_URL}${url}`\n\nfunction App () {\n  return (\n    <div>\n      <AppBar position='static'>\n        <Toolbar>\n          <Typography variant='h6'>\n            COVID-19\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <BrowserRouter>\n        <Switch>\n          <Route path={fixedURL('/')} exact>\n            <HomePage/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}