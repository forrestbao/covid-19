{"version":3,"sources":["components/NumberInput.tsx","components/UnitDisplay.tsx","pages/Home/OutputDialog.tsx","lib/svm_model.tsx","lib/svm_inference.tsx","api/index.ts","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NumberInput","label","field","callback","props","onChange","useCallback","target","Number","value","FormControl","InputLabel","Input","type","noop","UnitDisplay","content","unit","event","selected","Array","isArray","length","v","dangerouslySetInnerHTML","__html","Select","defaultValue","map","item","index","MenuItem","key","OutputDialog","open","children","theme","useTheme","fullscreen","useMediaQuery","breakpoints","down","Dialog","fullScreen","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","color","SVM_COVID_19_Model_Parameters","str_Model_Severe_Vs_Mild","feature_min_Model_Severe_Vs_Mild","feature_max_Model_Severe_Vs_Mild","svm_predict_with_model","array_to_predict","feature_min_array","feature_max_array","serialized_model","preprocessed_vector","Error","return_vector","i","scale_input_array","svm","predict","formData","name","error","createStore","form","data","formStoreContext","React","createContext","useStyles","makeStyles","formControl","display","flexDirection","flexWrap","margin","spacing","inputField","marginLeft","marginRight","width","HomePageConsumer","classes","formStore","store","useContext","useFormStore","useState","isSnackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","setField","showError","errorMessage","enter","input","forEach","some","Promise","resolve","Model","then","res","useObserver","Container","maxWidth","CssBaseline","className","style","marginTop","endAdornment","InputAdornment","position","onClick","variant","endIcon","Send","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","elevation","severity","HomePage","useLocalStore","Provider","App","AppBar","Toolbar","Typography","path","url","process","exact","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.04b612f7.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\nimport { Input, InputProps, FormControl, InputLabel } from '@material-ui/core'\n\nconst NumberInput: React.FC<InputProps & {\n  label: string\n  field: number\n  callback: (index: number, value: number) => void\n}> = ({ label, field, callback, ...props }) => {\n  const onChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> =\n    useCallback((target) => {\n      callback(field, Number(target.target.value))\n    }, [field, callback])\n  return (\n    <FormControl>\n      <InputLabel>{label}</InputLabel>\n      <Input onChange={onChange} type='number' {...props}/>\n    </FormControl>\n  )\n}\n\nexport default NumberInput\n","import React, { useCallback } from 'react'\nimport { FormControl, Select, MenuItem } from '@material-ui/core'\n\nconst noop = () => {}\n\nexport type Unit = string | ([string, (value: number) => number] | [string])[]\n\nconst UnitDisplay: React.FC<{\n  unit: Unit\n  onChange?: (render: (value: number) => number) => void\n}> = ({ unit, onChange = noop }) => {\n  const callback = useCallback((event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    const selected = Number(event.target.value)\n    if (Array.isArray(unit) && unit[selected].length === 2 && typeof unit[selected][1] === 'function') {\n      onChange(unit[selected][1] as (v: number) => number)\n    } else {\n      onChange(v => v)\n    }\n  }, [unit, onChange])\n  let content: JSX.Element\n  if (typeof unit === 'string') {\n    content = <span dangerouslySetInnerHTML={{ __html: unit }}/>\n  } else if (Array.isArray(unit)) {\n    content = (\n      <FormControl>\n        <Select onChange={callback} defaultValue={0}>\n          {unit.map((item, index) => (\n            <MenuItem key={item[0]} value={index}>\n              {item[0]}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    )\n  } else {\n    return (<div></div>)\n  }\n  return content\n}\n\nexport default UnitDisplay\n","import React from 'react'\nimport {\n  Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions,\n  useTheme, useMediaQuery, Button\n} from '@material-ui/core'\n\nconst OutputDialog: React.FC<{\n  open: boolean\n}> = ({ open, children }) => {\n  const theme = useTheme()\n  const fullscreen = useMediaQuery(theme.breakpoints.down('sm'))\n  return (\n    <Dialog\n      fullScreen={fullscreen}\n      open={open}\n    >\n      <DialogTitle>Predict Response</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{children}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus color=\"primary\">\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default OutputDialog\n","export default class SVM_COVID_19_Model_Parameters {\n  static str_Model_Severe_Vs_Mild =\n  `\n  svm_type c_svc\n  kernel_type rbf\n  gamma 0.00048828125\n  nr_class 2\n  total_sv 33\n  rho -449.25900722761054\n  label 1 -1\n  probA -0.92671988174979092\n  probB 0.1340102983762006\n  nr_sv 16 17\n  SV\n  6514.9838510498057 1:1 2:-0.243112 3:0.283582 4:0.996552 5:-1 6:-0.844262 7:-0.279822 8:-0.518259 9:1 10:1 11:-0.35 12:-0.770137 \n  34735.306403108298 1:0.420668 2:0.256696 3:-1 4:0.999687 5:-0.936561 6:-0.696721 7:-0.57971 8:-0.695506 9:-0.941296 10:-0.947944 11:-0.289474 12:-0.89899 \n  748528.08567594143 1:-0.550104 2:0.846213 3:0.119403 4:0.780285 5:-0.823038 6:-0.811475 7:0.0144928 8:-0.20436 9:-0.923233 10:-0.937131 11:-0.357895 12:-0.90404 \n  1835008 1:-0.604384 2:0.487377 3:-0.766169 4:-0.106096 5:0.0951586 6:0.508197 7:-0.724638 8:-0.976821 9:-0.885753 10:-0.984911 11:-0.560526 12:-0.965657 \n  1835008 1:-0.874739 2:0.307958 3:-0.527363 4:0.283184 5:-0.509182 6:-0.737705 7:-0.666667 8:-0.975605 9:-0.911492 10:-0.980133 11:-0.734211 12:-0.973737 \n  756711.20795047842 1:-0.754697 2:0.577086 3:0.129353 4:-0.118633 5:-0.0116861 6:-0.0245902 7:-0.144928 8:-0.975605 9:-0.932265 10:-1 11:-0.744737 12:-0.986869 \n  1835008 1:-0.590814 2:0.538639 3:-0.691542 4:0.0493653 5:-0.175292 6:0.139344 7:-0.869565 8:-0.975605 9:-0.921427 10:-0.948699 11:-0.792105 12:-1 \n  932895.74340444617 1:-0.813152 2:0.410483 3:-0.542289 4:-0.664629 5:0.415693 6:0.122951 7:-0.594203 8:-0.975605 9:-0.848724 10:-0.910223 11:-0.705263 12:-1 \n  1065475.3320603902 1:-0.689979 2:0.359221 3:-0.039801 4:0.0647234 5:-0.225376 6:-0.139344 7:-0.927536 8:-0.975605 9:-0.921427 10:-0.978121 11:-0.639474 12:-0.770137 \n  592752.44108617108 1:-0.593946 2:0.397668 3:-0.437811 4:0.664316 5:-0.692821 6:-0.647541 7:-0.362319 8:-0.383474 9:-0.911944 10:-0.96253 11:-0.521053 12:-0.928283 \n  1835008 1:-0.675365 2:0.577086 3:-0.517413 4:-0.200752 5:-0.048414 6:0.0983607 7:-0.279822 8:-0.903797 9:-0.929555 10:-0.912737 11:-0.852632 12:-0.958586 \n  1052915.3054154867 1:-0.911273 2:0.282327 3:-0.646766 4:0.432377 5:-0.385643 6:-0.696721 7:0.0869565 8:-0.326742 9:-0.88485 10:-0.89111 11:-0.523684 12:-0.976768 \n  139897.58626567182 1:-0.386221 2:0.33359 3:0.238806 4:0.370632 5:-0.36227 6:0.196721 7:-0.478261 8:-0.975605 9:-0.880786 10:-0.904942 11:-0.860526 12:-0.770137 \n  1133564.1194997528 1:-0.491649 2:0.628348 3:0.651741 4:-0.0738129 5:-0.145242 6:0.401639 7:-0.279822 8:-0.975605 9:-0.917814 10:-0.890859 11:-0.723684 12:-0.90202 \n  1835008 1:-0.813152 2:0.589901 3:-0.348259 4:-0.477198 5:0.115192 6:-0.0409836 7:-0.956522 8:-0.997488 9:-0.932265 10:-0.947693 11:-0.686842 12:-0.944444 \n  1835008 1:-0.796451 2:0.589901 3:-0.228856 4:0.240558 5:-0.422371 6:-0.54918 7:-0.971014 8:-0.886777 9:-0.886656 10:-0.960015 11:-1 12:-0.941414 \n  -1605632 1:-0.448852 2:0.666795 3:-0.378109 4:-0.0189625 5:-0.048414 6:0.672131 7:-0.536232 8:-0.935243 9:-0.883044 10:-0.934867 11:-0.763158 12:-0.983838 \n  -122293.55441683906 1:-0.80167 2:0.67961 3:-0.845771 4:0.253722 5:-0.539232 6:-0.639344 7:-0.666667 8:-0.947806 9:-0.838338 10:-0.851125 11:-0.828947 12:-0.965657 \n  -1605632 1:-0.660752 2:0.372036 3:-0.119403 4:0.0123805 5:-0.168614 6:-2.22045e-16 7:-0.318841 8:-0.762775 9:-0.993678 10:-0.949956 11:-0.915789 12:-0.843434 \n  -1495294.2668085215 1:-0.45929 2:0.166987 3:-0.39801 4:0.636107 5:-0.649416 6:-0.45082 7:-0.594203 8:-0.903797 9:-0.979228 10:-0.982397 11:-0.802632 12:-0.987879 \n  -1605632 1:-0.646138 2:0.474561 3:-0.567164 4:-0.373139 5:0.208681 6:0.54918 7:-0.623188 8:-0.89083 9:-0.913299 10:-0.954986 11:-0.805263 12:-0.992929 \n  -116492.21941135339 1:-0.818372 2:0.871844 3:-0.850746 4:0.360288 5:-0.278798 6:-0.442623 7:-0.84058 8:-0.417514 9:-0.702416 10:-0.795297 11:0.405263 12:-0.949495 \n  -398630.95131411665 1:-0.605428 2:0.359221 3:-0.313433 4:-0.178812 5:0.118531 6:0.540984 7:-0.971014 8:-0.975605 9:-0.902009 10:-0.956746 11:-0.897368 12:-0.99798 \n  -1001037.6983585688 1:-0.805846 2:0.205434 3:-0.547264 4:-0.0189625 5:-0.00834725 6:-0.147541 7:-0.913043 8:-0.945617 9:-0.901106 10:-0.951213 11:-0.826316 12:-0.99798 \n  -884191.01108788978 1:-0.758873 2:0.705242 3:-0.308458 4:-0.0158282 5:-0.0417362 6:-0.0655738 7:-0.449275 8:-0.585444 9:-0.920524 10:-0.97108 11:-0.815789 12:-0.99798 \n  -736180.31998886494 1:-0.546973 2:0.551455 3:-0.890547 4:-0.373139 5:0.285476 6:1 7:-0.898551 8:-0.975605 9:-0.938587 10:-0.951465 11:-0.784211 12:-0.979215 \n  -1605632 1:-0.938413 2:0.718057 3:-0.527363 4:0.131484 5:-0.195326 6:-0.606557 7:-0.289855 8:-0.762775 9:-0.857756 10:-0.948196 11:-0.0368421 12:-0.809091 \n  -225591.61105311141 1:-0.729645 2:0.88466 3:-0.696517 4:-0.0314998 5:-0.0383973 6:0.00819672 7:-0.637681 8:-0.922357 9:-0.772409 10:-0.84685 11:-0.731579 12:-0.99798 \n  -1605632 1:-0.764092 2:0.500192 3:0.0547264 4:0.169096 5:-0.412354 6:-0.47541 7:-0.536232 8:-0.966933 9:-0.881237 10:-0.934364 11:-0.447368 12:-0.858586 \n  -1605632 1:-0.881002 2:0.436114 3:-0.487562 4:-0.263438 5:-0.248748 6:-0.532787 7:-0.884058 8:-0.975605 9:-0.902009 10:-0.94216 11:-0.897368 12:-0.975758 \n  -1121578.9576622217 1:-0.829854 2:0.615532 3:0.0845771 4:-0.335527 5:-0.0851419 6:-0.278689 7:-0.913043 8:-0.975605 9:-0.895688 10:-0.9404 11:-0.931579 12:-0.99798 \n  -1266898.4524230901 1:-0.860125 2:0.628348 3:-0.368159 4:0.607898 5:-0.69616 6:-0.885246 7:-0.173913 8:-0.648499 9:-0.926846 10:-0.93537 11:-0.744737 12:-0.985859 \n  -472057.06908790208 1:-0.456159 2:0.474561 3:-0.0746269 4:-0.134932 5:-0.0951586 6:-0.57377 7:-0.927536 8:-0.975605 9:-0.831113 10:-0.932856 11:-0.797368 12:-0.99798 \n  \n  `\n\n  static feature_min_Model_Severe_Vs_Mild = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]\n  static feature_max_Model_Severe_Vs_Mild = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n","// @ts-ignore\nimport * as svm from 'libsvm-js/asm'\n\nexport function svm_predict_with_model (\n  /* the input array of numbers (length of 12) for inference */\n  array_to_predict: number[],\n  /* the minimum of each dimension of feature, an array of 12 numbers */\n  feature_min_array: number[],\n  /* the maximum of each dimension of feature, an array of 12 numbers */\n  feature_max_array: number[],\n  /* serialized model in string format, which is generated by svm-train libsvm */\n  /* Check svm_covid_19_model_parameters.ts for example */\n  serialized_model: string\n): -1 | 1 {\n  // preprocess input vector\n  const preprocessed_vector = scale_input_array(\n    array_to_predict,\n    feature_min_array,\n    feature_max_array\n  )\n  // load the model\n  const pretrained_model = svm.load(serialized_model)\n\n  // predict the parameters. The predict function takes a 2D array of number.\n  // so we input as a 12*1 vector and get the label with index of 1\n  const label = pretrained_model.predict([preprocessed_vector])\n  return label[0]\n}\n\n/* This function is to preprocess the input array of numbers with max\nand min value from training dataset, which is just the same as svm-scale */\nfunction scale_input_array (array_to_predict: number[], feature_min_array: number[]\n  , feature_max_array: number[]): number[] {\n  if (array_to_predict.length !== feature_max_array.length ||\n    array_to_predict.length !== feature_min_array.length) {\n    throw new Error('Please check input dimensions.')\n  }\n\n  const return_vector: number[] = new Array(array_to_predict.length)\n\n  for (let i = 0; i < array_to_predict.length; i++) {\n    return_vector[i] =\n      (array_to_predict[i] - feature_min_array[i]) /\n      (feature_max_array[i] - feature_min_array[i])\n  }\n\n  return return_vector\n}\n","import Model from '../lib/svm_model'\nimport { svm_predict_with_model } from '../lib/svm_inference'\n\nexport const getSVMPredict = (\n  input: number[]\n): Promise<1 | -1> => {\n  return new Promise((resolve) => {\n    const res = svm_predict_with_model(\n      // this is user's input, an array of 12 numbers\n      [...input],\n      // this is an array of minimum values of each dimension from svm-scale\n      Model.feature_min_Model_Severe_Vs_Mild,\n      // this is an array of maximux values of each dimension from svm-scale\n      Model.feature_max_Model_Severe_Vs_Mild,\n      // this is the raw string of pretrained model file\n      Model.str_Model_Severe_Vs_Mild\n    )\n    resolve(res)\n  })\n}\n","import React, { useCallback, useState } from 'react'\nimport { useLocalStore, useObserver } from 'mobx-react'\nimport {\n  Container, CssBaseline, FormControl, InputLabel, MenuItem,\n  Select, Button, Snackbar, InputAdornment\n} from '@material-ui/core'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { Send } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport NumberInput from '../components/NumberInput'\nimport UnitDisplay, { Unit } from '../components/UnitDisplay'\nimport OutputDialog from './Home/OutputDialog'\nimport { getSVMPredict } from '../api'\n\ntype Feature = {\n  name: string\n  unit: string | string[]\n}\n\ntype FeatureInput = Pick<Feature, 'name'> & {\n  error: boolean,\n  unit: Unit\n}\n\nconst formData: FeatureInput[] = [\n  { name: 'Count of White blood cell (WBC)', error: false, unit: '10<sup>3</sup>/mL' },\n  { name: 'Hemoglobin (HGB)', error: false, unit: 'g/L' },\n  { name: 'Platelet', error: false, unit: '10<sup>3</sup>/mL' },\n  { name: 'Neutrophil percent', error: false, unit: '%' },\n  { name: 'Neutrophil count', error: false, unit: '10<sup>3</sup>/mL' },\n  { name: 'Lymphocyte percent', error: false, unit: '%' },\n  { name: 'Lymphocyte count', error: false, unit: '10<sup>3</sup>/mL' },\n  { name: 'C-reaction protein (CRP)', error: false, unit: 'mg/L' },\n  { name: 'Total bilirubin (TBL)', error: false, unit: [['umol/L', value => (value / 17.1036)], ['mg/dL']] },\n  { name: 'Blood urea nitrogen (BUN)', error: false, unit: [['mmol/L', value => (value / 0.3571)], ['mg/dL']] },\n  { name: 'Creatinine', error: false, unit: [['umol/L', value => (value / 88.417)], ['mg/dL']] },\n  { name: 'Lactate dehydrogenase (LDH)', error: false, unit: 'U/L' },\n  { name: 'D-dimer', error: false, unit: 'mg/L' }\n]\n\nconst createStore = () => ({\n  form: new Array(13) as number[],\n  type: 0,\n  data: [...formData]\n})\n\nconst formStoreContext = React.createContext <ReturnType<typeof createStore> | null>(null)\n\nconst useFormStore = () => {\n  const store = React.useContext(formStoreContext)\n  if (!store) {\n    throw new Error('useFormStore must be used within a StoreProvider')\n  }\n  return store\n}\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: theme.spacing(1)\n  },\n  inputField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '35ch',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  }\n}))\n\nconst HomePageConsumer: React.FC = () => {\n  const classes = useStyles()\n  const formStore = useFormStore()\n  const [isSnackbarOpen, setSnackbarOpen] = useState<boolean>(false)\n  const [snackbarMessage, setSnackbarMessage] = useState<string>('')\n  const setField = useCallback((index: number, value: number) => {\n    formStore.form[index] = value\n    formStore.data[index].error = false\n  }, [formStore.form, formStore.data])\n  const showError = useCallback((errorMessage: string) => {\n    setSnackbarOpen(true)\n    setSnackbarMessage(errorMessage)\n  }, [])\n  const enter = useCallback(() => {\n    formStore.form.forEach((item, index) => {\n      if (item == null) {\n        !isSnackbarOpen && showError(`'${formData[index].name}' is empty`)\n        formStore.data[index].error = true\n      }\n    })\n    if (formStore.data.some(item => item.error)) {\n      return\n    }\n    getSVMPredict([...formStore.form]).then(res => {\n      if (res === -1) {\n\n      } else if (res === 1) {\n\n      }\n    })\n  }, [formStore.form, formStore.data, showError, isSnackbarOpen])\n  return useObserver(() => (\n    <Container maxWidth='md'>\n      <CssBaseline/>\n      <FormControl className={classes.formControl} style={{ marginTop: '1rem' }}>\n        <InputLabel>Type</InputLabel>\n        <Select\n          className={classes.inputField}\n          defaultValue={0}\n          onChange={(event) => {\n            formStore.type = Number(event.target.value as number)\n          }}\n        >\n          <MenuItem value={0}>Mild vs Viral</MenuItem>\n          <MenuItem value={1}>Severe vs Viral</MenuItem>\n          <MenuItem value={2}>Mild vs Severe</MenuItem>\n        </Select>\n        {formStore.data.map((item, index) => {\n          return (<NumberInput\n            className={classes.inputField}\n            error={item.error}\n            label={item.name}\n            endAdornment={<InputAdornment position='end'><UnitDisplay unit={item.unit}/></InputAdornment>}\n            field={index}\n            key={index}\n            callback={setField}/>)\n        })}\n      </FormControl>\n      <Button onClick={enter} variant='contained' color='primary' endIcon={<Send/>}>Enter</Button>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={isSnackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => { setSnackbarOpen(false) }}\n      >\n        <MuiAlert elevation={6} variant='filled' severity='error'>{snackbarMessage}</MuiAlert>\n      </Snackbar>\n      <OutputDialog open={false}/>\n    </Container>\n  ))\n}\n\nconst HomePage: React.FC = () => {\n  const formStore = useLocalStore(createStore)\n  return (\n    <formStoreContext.Provider value={formStore}>\n      <HomePageConsumer/>\n    </formStoreContext.Provider>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport {\n  AppBar, Toolbar, Typography\n} from '@material-ui/core'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/Home'\n\nconst fixedURL = (url: string) => `${process.env.PUBLIC_URL}${url}`\n\nfunction App () {\n  return (\n    <div>\n      <AppBar position='static'>\n        <Toolbar>\n          <Typography variant='h6'>\n            COVID-19\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <BrowserRouter>\n        <Switch>\n          <Route path={fixedURL('/')} exact>\n            <HomePage/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register (config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}